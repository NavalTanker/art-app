# Python
__pycache__/
*.py[cod]
*$py.class
*.so
*.egg-info/
dist/
build/
*.egg
*.env
*.venv
env/
venv/
ENV/

# OS-generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE and editor files
.idea/
.vscode/
*.swp
*~

# Secrets - These should ideally be managed via environment variables or a secure vault
secrets.ini
secrets.json
*.pem
# A common pattern for environment files, ensure .env.example is checked in if used.
.env
.env.*
!.env.example
!.env.sample

# Logs
logs/
*.log

# Coverage reports
.coverage
.coverage.*
coverage.xml
htmlcov/
.tox/
.nox/

# Jupyter Notebook checkpoints
.ipynb_checkpoints

# Temporary files
*.tmp
*.bak

# Media files (if they are user-generated and large, and not meant to be in repo)
# Consider storing these in cloud storage like S3 instead.
# media/
# uploads/

# Static files (if generated by a build process, e.g., Django's collectstatic)
# staticfiles/
# staticfiles_build/

# Local instance/database files
instance/ # Common for Flask
*.sqlite3
*.db
*.db3
# If using other DBs locally and don't want to commit dumps/data files
# *.sql
# *.dump

# PyInstaller (if bundling your app)
# *.manifest
# *.spec

# MyPy, Ruff, Pytest caches
.mypy_cache/
.ruff_cache/
.pytest_cache/

# Node.js (if you use any JS tools for frontend asset bundling)
# node_modules/
# npm-debug.log*
# yarn-debug.log*
# yarn-error.log*
# package-lock.json (commit this if your team uses it to lock JS dependencies)
# build/ (common for JS build output)
# dist/ (common for JS build output)
# .cache/

# Docker (if local docker-compose files have secrets or local overrides)
# .dockerignore (usually committed, but listed for completeness)
# docker-compose.override.yml

# Data files (if large or generated and not essential to the repo)
# data/
# *.csv
# *.json (if data, not config)
# *.xml (if data, not config)

# Compiled files from other languages if interoping (e.g. C extensions)
# *.o
# *.exe
# *.dll
# *.out
# *.app
# *.dmg
# *.c # If generated from Cython
# *.so # If compiled C extensions
